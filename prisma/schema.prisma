// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  firstname     String
  lastname      String
  userol        UserRol
  authToken     String?
  userProfile   userProfile[]
  designRequest designRequest[]
  pago          pago[]
}

model userProfile {
  id             Int     @id @default(autoincrement())
  user_id        Int     @unique
  foto_de_perfil String
  domicilio      String
  postal_code    String
  country        String
  cif            String?
  nombre_empresa String?
  user           User    @relation(fields: [user_id], references: [id])
}

model collections {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?
  designRequest designRequest[]
}

model designRequest {
  id                 Int           @id @default(autoincrement())
  request_user       Int
  collection_id      Int
  name               String
  SKU                String        @unique
  format             FormatDesign
  otro               String?
  price              Float?
  redes              RRSS?
  metaverso          Metaverso?
  checkout_stripe_id String?
  model_nft          String?
  mediaPath          String?
  delivery_date      DateTime?
  status             STATUSREQUEST
  collection         collections   @relation(fields: [collection_id], references: [id])
  user               User          @relation(fields: [request_user], references: [id])
  pago               pago[]
}

model pago {
  id           Int           @id @default(autoincrement())
  request_user Int
  desing_id    Int
  amount Float
  checkout_id String
  date DateTime
  design       designRequest @relation(fields: [desing_id], references: [id])
  user         User          @relation(fields: [request_user], references: [id])
}

model priceFormato {
  id             Int          @id @default(autoincrement())
  formato        FormatDesign @unique
  price          Float
  priceInstagram Float?
  priceTiktok    Float?
  priceSnap      Float?
  priceRoblox    Float?
  priceZepeto    Float?
}

enum UserRol {
  ADMIN
  CLIENT
}

enum FormatDesign {
  FACTORY_3D
  MARKETING_3DAVATAR
  MARKETING_3D
  RENDER_360
  RENDER_RUNWAY
  OTRO
}

enum RRSS {
  INSTAGRAM
  TIKTOK
  SNAP
}

enum Metaverso {
  ROBLOX
  ZEPETO
}

enum STATUSREQUEST {
  BORRADOR
  PAGO_PENDIENTE
  ENVIADO
  EN_PROCESO
  ENTREGADO
  REVISION
  FINALIZADO
}
